<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>心如止水</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-04T11:23:26.649Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>gerogegao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Matplotlib的Seaborn风格可视化</title>
    <link href="http://yoursite.com/2019/10/04/Matplotlib%E7%9A%84Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <id>http://yoursite.com/2019/10/04/Matplotlib的Seaborn风格可视化/</id>
    <published>2019-10-04T11:04:57.000Z</published>
    <updated>2019-10-04T11:23:26.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Seaborn风格可视化"><a href="#1-Seaborn风格可视化" class="headerlink" title="1.Seaborn风格可视化"></a>1.Seaborn风格可视化</h1><h2 id="1-1-什么事seaborn"><a href="#1-1-什么事seaborn" class="headerlink" title="1.1 什么事seaborn"></a>1.1 什么事seaborn</h2><p>​       Seaborn是基于matplotlib的图形可视化python包。它提供了一种高度交互式界面，便于用户能够做出各种有吸引力的统计图表。Seaborn是在matplotlib的基础上进行了更高级的API封装，从而使得作图更加容易，在大多数情况下使用seaborn能做出很具有吸引力的图，而使用matplotlib就能制作具有更多特色的图。应该把Seaborn视为matplotlib的补充，而不是替代物。同时它能高度兼容numpy与pandas数据结构以及scipy与statsmodels等统计模式。</p><a id="more"></a><h2 id="1-2-seaborn-API"><a href="#1-2-seaborn-API" class="headerlink" title="1.2 seaborn API"></a>1.2 seaborn API</h2><p>Seaborn 要求原始数据的输入类型为 pandas 的 Dataframe 或 Numpy 数组，画图函数有以下几种形式:</p><ul><li>sns.图名(x=’X轴 列名’, y=’Y轴 列名’, data=原始数据df对象)</li><li>sns.图名(x=’X轴 列名’, y=’Y轴 列名’, hue=’分组绘图参数’, data=原始数据df对象)</li><li>sns.图名(x=np.array, y=np.array[, …])</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> scipy <span class="keyword">as</span> stats</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><h1 id="2-基本绘图设置"><a href="#2-基本绘图设置" class="headerlink" title="2. 基本绘图设置"></a>2. 基本绘图设置</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建正弦函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sinplot</span><span class="params">(flip=<span class="number">1</span>)</span>:</span></span><br><span class="line">    x = np.linspace(<span class="number">0</span>, <span class="number">14</span>, <span class="number">100</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">7</span>):</span><br><span class="line">        plt.plot(x, np.sin(x+i*<span class="number">.5</span>)*(<span class="number">7</span>-i)*flip)</span><br><span class="line"></span><br><span class="line">sinplot()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_3_0.png" alt></p><h2 id="2-1-简单切换成Seaborn风格"><a href="#2-1-简单切换成Seaborn风格" class="headerlink" title="2.1 简单切换成Seaborn风格"></a>2.1 简单切换成Seaborn风格</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换Seaborn风格</span></span><br><span class="line">sns.set()</span><br><span class="line">fig = plt.figure(figsize=(<span class="number">8</span>,<span class="number">6</span>))</span><br><span class="line">sinplot()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_5_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换seaborn图标风格</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>), facecolor=<span class="string">'white'</span>)</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">211</span>)</span><br><span class="line">sns.set_style(<span class="string">'whitegrid'</span>)</span><br><span class="line">data = np.random.normal(size=(<span class="number">20</span>,<span class="number">6</span>))+np.arange(<span class="number">6</span>)/<span class="number">2</span></span><br><span class="line">sns.boxplot(data=data)</span><br><span class="line">plt.title(<span class="string">'style-whitegrid'</span>)</span><br><span class="line"></span><br><span class="line">ax2 = fig.add_subplot(<span class="number">212</span>)</span><br><span class="line">sns.set_style(<span class="string">'dark'</span>)</span><br><span class="line">sinplot()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_6_0.png" alt="png"></p><h2 id="2-3-设置图标坐标轴"><a href="#2-3-设置图标坐标轴" class="headerlink" title="2.3 设置图标坐标轴"></a>2.3 设置图标坐标轴</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#despine()</span></span><br><span class="line"><span class="comment"># seaborn.despine(fig=None, ax=None, top=True, right=True, left=False, bottom=False, offset=None, trim=False)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置风格</span></span><br><span class="line">sns.set_style(<span class="string">"ticks"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建图表</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">6</span>,<span class="number">9</span>))</span><br><span class="line">plt.subplots_adjust(hspace=<span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line">ax1 = fig.add_subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>)  </span><br><span class="line">sinplot()</span><br><span class="line"><span class="comment"># 删除了上、右坐标轴</span></span><br><span class="line">sns.despine()</span><br><span class="line"></span><br><span class="line">ax2 = fig.add_subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">sns.violinplot(data=data)</span><br><span class="line"><span class="comment"># offset：与坐标轴之间的偏移</span></span><br><span class="line"><span class="comment"># trim：为True时，将坐标轴限制在数据最大最小值</span></span><br><span class="line"><span class="comment">#sns.despine(offset=10, trim=True)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ax3 = fig.add_subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment"># top, right, left, bottom：布尔型，为True时不显示</span></span><br><span class="line"><span class="comment">#sns.despine(left=True, right = False)</span></span><br><span class="line">sns.boxplot(data=data, palette=<span class="string">"deep"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b20e4f7a58&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_8_1.png" alt="png"></p><h2 id="2-4-设置局部图标风格"><a href="#2-4-设置局部图标风格" class="headerlink" title="2.4 设置局部图标风格"></a>2.4 设置局部图标风格</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> sns.axes_style(<span class="string">"darkgrid"</span>):</span><br><span class="line">    plt.subplot(<span class="number">211</span>)</span><br><span class="line">    sinplot()</span><br><span class="line"><span class="comment"># 设置局部图表风格，用with做代码块区分</span></span><br><span class="line"></span><br><span class="line">sns.set_style(<span class="string">"whitegrid"</span>)</span><br><span class="line">plt.subplot(<span class="number">212</span>)</span><br><span class="line">sinplot()</span><br><span class="line"><span class="comment"># 外部表格风格</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_10_0.png" alt="png"></p><h2 id="2-5-设置显示比例"><a href="#2-5-设置显示比例" class="headerlink" title="2.5 设置显示比例"></a>2.5 设置显示比例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#set_context()</span></span><br><span class="line"><span class="comment"># 选择包括：'paper', 'notebook', 'talk', 'poster'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 与上面的cell比较你就会发现不同</span></span><br><span class="line">    </span><br><span class="line">sns.set_style(<span class="string">"whitegrid"</span>)</span><br><span class="line">sns.set_context(<span class="string">"poster"</span>)</span><br><span class="line">plt.subplot(<span class="number">212</span>)</span><br><span class="line">sinplot()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_12_0.png" alt="png"></p><h2 id="2-6-调色板"><a href="#2-6-调色板" class="headerlink" title="2.6 调色板"></a>2.6 调色板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># color_palette()</span></span><br><span class="line"><span class="comment"># 默认6种颜色：deep, muted, pastel, bright, dark, colorblind</span></span><br><span class="line"><span class="comment"># seaborn.color_palette(palette=None, n_colors=None, desat=None)</span></span><br><span class="line">current_palette = sns.color_palette()</span><br><span class="line">print(type(current_palette))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sns.palplot(current_palette[2:4])</span></span><br><span class="line">sns.palplot(current_palette)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &apos;seaborn.palettes._ColorPalette&apos;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_14_1.png" alt="png"></p><h2 id="2-7-颜色风格"><a href="#2-7-颜色风格" class="headerlink" title="2.7 颜色风格"></a>2.7 颜色风格</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 颜色风格内容：Accent, Accent_r, Blues, Blues_r, BrBG, BrBG_r, BuGn, BuGn_r, BuPu, </span></span><br><span class="line"><span class="comment"># BuPu_r, CMRmap, CMRmap_r, Dark2, Dark2_r, GnBu, GnBu_r, Greens, Greens_r, Greys, Greys_r, OrRd, OrRd_r, Oranges, Oranges_r, PRGn, PRGn_r, </span></span><br><span class="line"><span class="comment"># Paired, Paired_r, Pastel1, Pastel1_r, Pastel2, Pastel2_r, PiYG, PiYG_r, PuBu, PuBuGn, PuBuGn_r, PuBu_r, PuOr, PuOr_r, PuRd, PuRd_r, Purples,</span></span><br><span class="line"><span class="comment"># Purples_r, RdBu, RdBu_r, RdGy, RdGy_r, RdPu, RdPu_r, RdYlBu, RdYlBu_r, RdYlGn, RdYlGn_r, Reds, Reds_r, Set1, Set1_r, Set2, Set2_r, Set3, </span></span><br><span class="line"><span class="comment"># Set3_r, Spectral, Spectral_r, Wistia, Wistia_r, YlGn, YlGnBu, YlGnBu_r, YlGn_r, YlOrBr, YlOrBr_r, YlOrRd, YlOrRd_r, afmhot, afmhot_r, </span></span><br><span class="line"><span class="comment"># autumn, autumn_r, binary, binary_r, bone, bone_r, brg, brg_r, bwr, bwr_r, cool, cool_r, coolwarm, coolwarm_r, copper, copper_r, cubehelix, </span></span><br><span class="line"><span class="comment"># cubehelix_r, flag, flag_r, gist_earth, gist_earth_r, gist_gray, gist_gray_r, gist_heat, gist_heat_r, gist_ncar, gist_ncar_r, gist_rainbow, </span></span><br><span class="line"><span class="comment"># gist_rainbow_r, gist_stern, gist_stern_r, gist_yarg, gist_yarg_r, gnuplot, gnuplot2, gnuplot2_r, gnuplot_r, gray, gray_r, hot, hot_r, hsv, </span></span><br><span class="line"><span class="comment"># hsv_r, icefire, icefire_r, inferno, inferno_r, jet, jet_r, magma, magma_r, mako, mako_r, nipy_spectral, nipy_spectral_r, ocean, ocean_r, </span></span><br><span class="line"><span class="comment"># pink, pink_r, plasma, plasma_r, prism, prism_r, rainbow, rainbow_r, rocket, rocket_r, seismic, seismic_r, spectral, spectral_r, spring, </span></span><br><span class="line"><span class="comment"># spring_r, summer, summer_r, terrain, terrain_r, viridis, viridis_r, vlag, vlag_r, winter, winter_r</span></span><br><span class="line"></span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">'Accent'</span>,<span class="number">12</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">'Accent_r'</span>,<span class="number">8</span>))</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_16_0.png" alt="png"></p><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_16_1.png" alt="png"></p><h2 id="2-8-设置饱和度和亮度"><a href="#2-8-设置饱和度和亮度" class="headerlink" title="2.8 设置饱和度和亮度"></a>2.8 设置饱和度和亮度</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.palplot(sns.hls_palette(<span class="number">4</span>,l=<span class="number">.3</span>,s=<span class="number">.8</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># l-&gt;亮度</span></span><br><span class="line"><span class="comment"># s-&gt;饱和度</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_18_0.png" alt="png"></p><h2 id="2-9-设置颜色线性变化"><a href="#2-9-设置颜色线性变化" class="headerlink" title="2.9 设置颜色线性变化"></a>2.9 设置颜色线性变化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置颜色线性变化</span></span><br><span class="line">sns.palplot(sns.cubehelix_palette(<span class="number">16</span>, gamma=<span class="number">2</span>))</span><br><span class="line">sns.palplot(sns.cubehelix_palette(<span class="number">16</span>, start=<span class="number">.5</span>, rot=<span class="number">.75</span>))</span><br><span class="line">sns.palplot(sns.cubehelix_palette(<span class="number">16</span>,start=<span class="number">0.5</span>, rot=<span class="number">0</span>, dark=<span class="number">0.95</span>, reverse=<span class="literal">True</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># n_colors → 颜色个数</span></span><br><span class="line"><span class="comment"># start → 值区间在0-3，开始颜色</span></span><br><span class="line"><span class="comment"># rot → 颜色旋转角度</span></span><br><span class="line"><span class="comment"># gamma → 颜色伽马值，越大颜色越暗</span></span><br><span class="line"><span class="comment"># dark，light → 值区间0-1，颜色深浅</span></span><br><span class="line"><span class="comment"># reverse → 布尔值，默认为False，由浅到深</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_20_0.png" alt="png"></p><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_20_1.png" alt="png"></p><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_20_2.png" alt="png"></p><h2 id="2-10-创建分散颜色"><a href="#2-10-创建分散颜色" class="headerlink" title="2.10 创建分散颜色"></a>2.10 创建分散颜色</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize = (<span class="number">8</span>,<span class="number">6</span>))</span><br><span class="line">x = np.arange(<span class="number">25</span>).reshape(<span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment"># 创建分散颜色</span></span><br><span class="line">cmap = sns.diverging_palette(<span class="number">200</span>, <span class="number">20</span>, sep=<span class="number">20</span>, as_cmap=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">sns.heatmap(x, cmap=cmap)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21a370cf8&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_22_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sns.set_style(<span class="string">'whitegrid'</span>)</span><br><span class="line">fig=plt.figure(figsize=(<span class="number">12</span>,<span class="number">8</span>))</span><br><span class="line"><span class="keyword">with</span> sns.color_palette(<span class="string">'PuBuGn_d'</span>):</span><br><span class="line">    plt.subplot(<span class="number">211</span>)</span><br><span class="line">    sinplot()</span><br><span class="line">    </span><br><span class="line">sns.set_palette(<span class="string">'husl'</span>)</span><br><span class="line">plt.subplot(<span class="number">212</span>)</span><br><span class="line">sinplot()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_23_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br><span class="line">sns.set_context(<span class="string">'paper'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment">#不再发出警告</span></span><br></pre></td></tr></table></figure><h1 id="3-分布数据可视化"><a href="#3-分布数据可视化" class="headerlink" title="3. 分布数据可视化"></a>3. 分布数据可视化</h1><h2 id="3-1-直方图"><a href="#3-1-直方图" class="headerlink" title="3.1 直方图"></a>3.1 直方图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#直方图</span></span><br><span class="line"><span class="comment">#设计随即种子</span></span><br><span class="line">rs = np.random.RandomState(<span class="number">10</span>)</span><br><span class="line">s = pd.Series(rs.randn(<span class="number">100</span>)*<span class="number">100</span>)</span><br><span class="line">sns.distplot(s, bins=<span class="number">10</span>, hist=<span class="literal">True</span>, kde=<span class="literal">False</span>, norm_hist=<span class="literal">False</span>,</span><br><span class="line">            rug=<span class="literal">True</span>,vertical=<span class="literal">False</span>,color=<span class="string">'y'</span>, label=<span class="string">'distplot'</span>, axlabel=<span class="string">'x'</span>)</span><br><span class="line"></span><br><span class="line">plt.legend()</span><br><span class="line"><span class="comment"># bins → 箱数</span></span><br><span class="line"><span class="comment"># hist、ked → 是否显示箱/密度曲线</span></span><br><span class="line"><span class="comment"># norm_hist → 直方图是否按照密度来显示</span></span><br><span class="line"><span class="comment"># rug → 是否显示数据分布情况</span></span><br><span class="line"><span class="comment"># vertical → 是否水平显示</span></span><br><span class="line"><span class="comment"># color → 设置颜色</span></span><br><span class="line"><span class="comment"># label → 图例</span></span><br><span class="line"><span class="comment"># axlabel → x轴标注</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.legend.Legend at 0x1b20e65e4e0&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_26_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(s, rug=<span class="literal">True</span>, rug_kws=&#123;<span class="string">'color'</span>:<span class="string">'g'</span>&#125;,</span><br><span class="line">            kde_kws=&#123;<span class="string">"color"</span>: <span class="string">"k"</span>, <span class="string">"lw"</span>: <span class="number">1</span>, <span class="string">"label"</span>: <span class="string">"KDE"</span>,<span class="string">'linestyle'</span>:<span class="string">'--'</span>&#125;,   </span><br><span class="line">            <span class="comment"># 设置密度曲线颜色，线宽，标注、线形</span></span><br><span class="line">            hist_kws=&#123;<span class="string">"histtype"</span>: <span class="string">"step"</span>, <span class="string">"linewidth"</span>: <span class="number">1</span>,<span class="string">"alpha"</span>: <span class="number">1</span>, <span class="string">"color"</span>: <span class="string">"g"</span>&#125;)  </span><br><span class="line">            <span class="comment"># 设置箱子的风格、线宽、透明度、颜色</span></span><br><span class="line">            <span class="comment"># 风格包括：'bar', 'barstacked', 'step', 'stepfilled'</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21bc8e828&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_27_1.png" alt="png"></p><h2 id="3-2-密度图"><a href="#3-2-密度图" class="headerlink" title="3.2 密度图"></a>3.2 密度图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 密度图 - kdeplot()</span></span><br><span class="line"><span class="comment"># 单个样本数据密度分布图</span></span><br><span class="line"></span><br><span class="line">sns.kdeplot(s,</span><br><span class="line">           shade = <span class="literal">False</span>,  <span class="comment"># 是否填充</span></span><br><span class="line">           color = <span class="string">'b'</span>,   <span class="comment"># 设置颜色</span></span><br><span class="line">           vertical = <span class="literal">False</span>  <span class="comment"># 设置是否水平</span></span><br><span class="line">           )</span><br><span class="line"></span><br><span class="line">sns.kdeplot(s,bw=<span class="number">5</span>, label=<span class="string">"bw: 0.2"</span>,</span><br><span class="line">            linestyle = <span class="string">'-'</span>,linewidth = <span class="number">1.2</span>,alpha = <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">sns.kdeplot(s,bw=<span class="number">20</span>, label=<span class="string">"bw: 2"</span>,</span><br><span class="line">            linestyle = <span class="string">'-'</span>,linewidth = <span class="number">1.2</span>,alpha = <span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># bw → 控制拟合的程度，类似直方图的箱数</span></span><br><span class="line"></span><br><span class="line">sns.rugplot(s,height = <span class="number">0.1</span>,color = <span class="string">'k'</span>,alpha = <span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># 数据频率分布图</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21babf470&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_29_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 密度图 - kdeplot()</span></span><br><span class="line"><span class="comment"># 两个样本数据密度分布图</span></span><br><span class="line"></span><br><span class="line">rs = np.random.RandomState(<span class="number">2</span>)  <span class="comment"># 设定随机数种子</span></span><br><span class="line">df = pd.DataFrame(rs.randn(<span class="number">100</span>,<span class="number">2</span>),</span><br><span class="line">                 columns = [<span class="string">'A'</span>,<span class="string">'B'</span>])</span><br><span class="line">sns.kdeplot(df[<span class="string">'A'</span>],df[<span class="string">'B'</span>],</span><br><span class="line">           cbar = <span class="literal">True</span>,    <span class="comment"># 是否显示颜色图例</span></span><br><span class="line">           shade = <span class="literal">True</span>,   <span class="comment"># 是否填充</span></span><br><span class="line">           cmap = <span class="string">'Reds'</span>,  <span class="comment"># 设置调色盘</span></span><br><span class="line">           shade_lowest=<span class="literal">False</span>,  <span class="comment"># 最外围颜色是否显示</span></span><br><span class="line">           n_levels = <span class="number">10</span>   <span class="comment"># 曲线个数（如果非常多，则会越平滑）</span></span><br><span class="line">           )</span><br><span class="line"><span class="comment"># 两个维度数据生成曲线密度图，以颜色作为密度衰减显示</span></span><br><span class="line"></span><br><span class="line">sns.rugplot(df[<span class="string">'A'</span>], color=<span class="string">"g"</span>, axis=<span class="string">'x'</span>,alpha = <span class="number">0.5</span>)</span><br><span class="line">sns.rugplot(df[<span class="string">'B'</span>], color=<span class="string">"r"</span>, axis=<span class="string">'y'</span>,alpha = <span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># 注意设置x，y轴</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21bb63470&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_30_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 密度图 - kdeplot()</span></span><br><span class="line"><span class="comment"># 两个样本数据密度分布图</span></span><br><span class="line"><span class="comment"># 多个密度图</span></span><br><span class="line"></span><br><span class="line">rs1 = np.random.RandomState(<span class="number">2</span>)  </span><br><span class="line">rs2 = np.random.RandomState(<span class="number">5</span>)  </span><br><span class="line">df1 = pd.DataFrame(rs1.randn(<span class="number">100</span>,<span class="number">2</span>)+<span class="number">2</span>,columns = [<span class="string">'A'</span>,<span class="string">'B'</span>])</span><br><span class="line">df2 = pd.DataFrame(rs2.randn(<span class="number">100</span>,<span class="number">2</span>)<span class="number">-2</span>,columns = [<span class="string">'A'</span>,<span class="string">'B'</span>])</span><br><span class="line"><span class="comment"># 创建数据</span></span><br><span class="line"></span><br><span class="line">sns.kdeplot(df1[<span class="string">'A'</span>],df1[<span class="string">'B'</span>],cmap = <span class="string">'Greens'</span>,</span><br><span class="line">            shade = <span class="literal">True</span>,shade_lowest=<span class="literal">False</span>)</span><br><span class="line">sns.kdeplot(df2[<span class="string">'A'</span>],df2[<span class="string">'B'</span>],cmap = <span class="string">'Blues'</span>,</span><br><span class="line">            shade = <span class="literal">True</span>,shade_lowest=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># 创建图表</span></span><br><span class="line"><span class="comment">#sns.rugplot(df2['A']+df1['A'], color="g", axis='x',alpha = 0.5)</span></span><br><span class="line"><span class="comment">#sns.rugplot(df2['B']+df1['B'], color="r", axis='y',alpha = 0.5)</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21be56278&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_31_1.png" alt="png"></p><h2 id="3-3-综合散点图"><a href="#3-3-综合散点图" class="headerlink" title="3.3 综合散点图"></a>3.3 综合散点图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 综合散点图 - jointplot()</span></span><br><span class="line"><span class="comment"># 散点图 + 分布图</span></span><br><span class="line"></span><br><span class="line">rs = np.random.RandomState(<span class="number">2</span>)  </span><br><span class="line">df = pd.DataFrame(rs.randn(<span class="number">200</span>,<span class="number">2</span>),columns = [<span class="string">'A'</span>,<span class="string">'B'</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sns.jointplot(x=df[<span class="string">'A'</span>], y=df[<span class="string">'B'</span>],  <span class="comment"># 设置xy轴，显示columns名称</span></span><br><span class="line">              data=df,   <span class="comment"># 设置数据</span></span><br><span class="line">              color = <span class="string">'k'</span>,   <span class="comment"># 设置颜色</span></span><br><span class="line">              s = <span class="number">50</span>, edgecolor=<span class="string">"w"</span>,linewidth=<span class="number">1</span>,  <span class="comment"># 设置散点大小、边缘线颜色及宽度(只针对scatter）</span></span><br><span class="line">              kind = <span class="string">'scatter'</span>,   <span class="comment"># 设置类型：“scatter”、“reg”、“resid”、“kde”、“hex”</span></span><br><span class="line">              space = <span class="number">0.2</span>,  <span class="comment"># 设置散点图和布局图的间距</span></span><br><span class="line">              size = <span class="number">8</span>,   <span class="comment"># 图表大小（自动调整为正方形）</span></span><br><span class="line">              ratio = <span class="number">5</span>,  <span class="comment"># 散点图与布局图高度比，整型</span></span><br><span class="line">              marginal_kws=dict(bins=<span class="number">15</span>, rug=<span class="literal">True</span>)  <span class="comment"># 设置柱状图箱数，是否设置rug</span></span><br><span class="line">              )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.JointGrid at 0x1b21bee2be0&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_33_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 综合散点图 - jointplot()</span></span><br><span class="line"><span class="comment"># 散点图 + 分布图</span></span><br><span class="line"><span class="comment"># 六边形图</span></span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(rs.randn(<span class="number">500</span>,<span class="number">2</span>),columns = [<span class="string">'A'</span>,<span class="string">'B'</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> sns.axes_style(<span class="string">"white"</span>):</span><br><span class="line">    sns.jointplot(x=df[<span class="string">'A'</span>], y=df[<span class="string">'B'</span>],data = df, kind=<span class="string">"hex"</span>, color=<span class="string">"g"</span>,</span><br><span class="line">                 marginal_kws=dict(bins=<span class="number">20</span>))</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_34_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 综合散点图 - jointplot()</span></span><br><span class="line"><span class="comment"># 散点图 + 分布图</span></span><br><span class="line"><span class="comment"># 密度图</span></span><br><span class="line"></span><br><span class="line">rs = np.random.RandomState(<span class="number">15</span>)</span><br><span class="line">df = pd.DataFrame(rs.randn(<span class="number">300</span>,<span class="number">2</span>),columns = [<span class="string">'A'</span>,<span class="string">'B'</span>])</span><br><span class="line"><span class="comment"># 创建数据</span></span><br><span class="line"></span><br><span class="line">g = sns.jointplot(x=df[<span class="string">'A'</span>], y=df[<span class="string">'B'</span>],data = df,</span><br><span class="line">                  kind=<span class="string">"kde"</span>, color=<span class="string">"k"</span>,</span><br><span class="line">                  shade_lowest=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># 创建密度图</span></span><br><span class="line"></span><br><span class="line">g.plot_joint(plt.scatter,c=<span class="string">"w"</span>, s=<span class="number">30</span>, linewidth=<span class="number">1</span>, marker=<span class="string">"*"</span>)</span><br><span class="line"><span class="comment"># 添加散点图</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.JointGrid at 0x1b21c4325f8&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_35_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 综合散点图 - JointGrid()</span></span><br><span class="line"><span class="comment"># 可拆分绘制的散点图</span></span><br><span class="line"><span class="comment"># plot_joint() + ax_marg_x.hist() + ax_marg_y.hist()</span></span><br><span class="line"></span><br><span class="line">sns.set_style(<span class="string">"white"</span>)</span><br><span class="line"><span class="comment"># 设置风格</span></span><br><span class="line"></span><br><span class="line">tips = sns.load_dataset(<span class="string">"tips"</span>)</span><br><span class="line">print(tips.head())</span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line"></span><br><span class="line">g = sns.JointGrid(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, data=tips)</span><br><span class="line"><span class="comment"># 创建一个绘图表格区域，设置好x、y对应数据</span></span><br><span class="line"></span><br><span class="line">g.plot_joint(plt.scatter, color =<span class="string">'m'</span>, edgecolor = <span class="string">'white'</span>)  <span class="comment"># 设置框内图表，scatter</span></span><br><span class="line">g.ax_marg_x.hist(tips[<span class="string">"total_bill"</span>], color=<span class="string">"b"</span>, alpha=<span class="number">.6</span>,</span><br><span class="line">                 bins=np.arange(<span class="number">0</span>, <span class="number">60</span>, <span class="number">3</span>))            <span class="comment"># 设置x轴直方图，注意bins是数组</span></span><br><span class="line">g.ax_marg_y.hist(tips[<span class="string">"tip"</span>], color=<span class="string">"r"</span>, alpha=<span class="number">.6</span>,</span><br><span class="line">                 orientation=<span class="string">"horizontal"</span>,</span><br><span class="line">                 bins=np.arange(<span class="number">0</span>, <span class="number">12</span>, <span class="number">1</span>))            <span class="comment"># 设置x轴直方图，注意需要orientation参数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> stats</span><br><span class="line">g.annotate(stats.pearsonr)    </span><br><span class="line"><span class="comment"># 设置标注，可以为pearsonr，spearmanr</span></span><br><span class="line"></span><br><span class="line">plt.grid(linestyle = <span class="string">'--'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   total_bill   tip     sex smoker  day    time  size</span><br><span class="line">0       16.99  1.01  Female     No  Sun  Dinner     2</span><br><span class="line">1       10.34  1.66    Male     No  Sun  Dinner     3</span><br><span class="line">2       21.01  3.50    Male     No  Sun  Dinner     3</span><br><span class="line">3       23.68  3.31    Male     No  Sun  Dinner     2</span><br><span class="line">4       24.59  3.61  Female     No  Sun  Dinner     4</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_36_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 综合散点图 - JointGrid()</span></span><br><span class="line"><span class="comment"># 可拆分绘制的散点图</span></span><br><span class="line"><span class="comment"># plot_joint() + plot_marginals()</span></span><br><span class="line"></span><br><span class="line">g = sns.JointGrid(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, data=tips)</span><br><span class="line"><span class="comment"># 创建一个绘图表格区域，设置好x、y对应数据</span></span><br><span class="line"></span><br><span class="line">g = g.plot_joint(plt.scatter,color=<span class="string">"g"</span>, s=<span class="number">40</span>, edgecolor=<span class="string">"white"</span>)   <span class="comment"># 绘制散点图</span></span><br><span class="line">plt.grid(linestyle = <span class="string">'--'</span>)</span><br><span class="line"></span><br><span class="line">g.plot_marginals(sns.distplot, kde=<span class="literal">True</span>, color=<span class="string">"g"</span>)                <span class="comment"># 绘制x，y轴直方图</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.JointGrid at 0x1b21c630da0&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_37_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 综合散点图 - JointGrid()</span></span><br><span class="line"><span class="comment"># 可拆分绘制的散点图</span></span><br><span class="line"><span class="comment"># plot_joint() + plot_marginals()</span></span><br><span class="line"><span class="comment"># kde - 密度图</span></span><br><span class="line"></span><br><span class="line">g = sns.JointGrid(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, data=tips)</span><br><span class="line"><span class="comment"># 创建一个绘图表格区域，设置好x、y对应数据</span></span><br><span class="line"></span><br><span class="line">g = g.plot_joint(sns.kdeplot,cmap = <span class="string">'Reds_r'</span>)             <span class="comment"># 绘制密度图</span></span><br><span class="line">plt.grid(linestyle = <span class="string">'--'</span>)</span><br><span class="line"></span><br><span class="line">g.plot_marginals(sns.kdeplot, shade = <span class="literal">True</span>, color=<span class="string">"r"</span>)  <span class="comment"># 绘制x，y轴密度图</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.JointGrid at 0x1b21d7aef60&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_38_1.png" alt="png"></p><h2 id="3-4-矩阵散点图"><a href="#3-4-矩阵散点图" class="headerlink" title="3.4 矩阵散点图"></a>3.4 矩阵散点图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 矩阵散点图 - pairplot()</span></span><br><span class="line"></span><br><span class="line">sns.set_style(<span class="string">"white"</span>)</span><br><span class="line"><span class="comment"># 设置风格</span></span><br><span class="line"></span><br><span class="line">iris = sns.load_dataset(<span class="string">"iris"</span>)</span><br><span class="line">print(iris.head())</span><br><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"></span><br><span class="line">sns.pairplot(iris,</span><br><span class="line">            kind = <span class="string">'scatter'</span>,  <span class="comment"># 散点图/回归分布图 &#123;‘scatter’, ‘reg’&#125;  </span></span><br><span class="line">            diag_kind=<span class="string">"hist"</span>,  <span class="comment"># 直方图/密度图 &#123;‘hist’, ‘kde’&#125;</span></span><br><span class="line">            hue=<span class="string">"species"</span>,   <span class="comment"># 按照某一字段进行分类</span></span><br><span class="line">            palette=<span class="string">"husl"</span>,  <span class="comment"># 设置调色板</span></span><br><span class="line">            markers=[<span class="string">"o"</span>, <span class="string">"s"</span>, <span class="string">"D"</span>],  <span class="comment"># 设置不同系列的点样式（这里根据参考分类个数）</span></span><br><span class="line">            size = <span class="number">2</span>,   <span class="comment"># 图表大小</span></span><br><span class="line">            )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   sepal_length  sepal_width  petal_length  petal_width species</span><br><span class="line">0           5.1          3.5           1.4          0.2  setosa</span><br><span class="line">1           4.9          3.0           1.4          0.2  setosa</span><br><span class="line">2           4.7          3.2           1.3          0.2  setosa</span><br><span class="line">3           4.6          3.1           1.5          0.2  setosa</span><br><span class="line">4           5.0          3.6           1.4          0.2  setosa</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.PairGrid at 0x1b21d8a44e0&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_40_2.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 矩阵散点图 - pairplot()</span></span><br><span class="line"><span class="comment"># 只提取局部变量进行对比</span></span><br><span class="line"></span><br><span class="line">sns.pairplot(iris,vars=[<span class="string">"sepal_width"</span>, <span class="string">"sepal_length"</span>],</span><br><span class="line">             kind = <span class="string">'reg'</span>, diag_kind=<span class="string">"kde"</span>, </span><br><span class="line">             hue=<span class="string">"species"</span>, palette=<span class="string">"husl"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.PairGrid at 0x1b21e003c18&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_41_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 矩阵散点图 - pairplot()</span></span><br><span class="line"><span class="comment"># 其他参数设置</span></span><br><span class="line"></span><br><span class="line">sns.pairplot(iris, diag_kind=<span class="string">"kde"</span>, markers=<span class="string">"+"</span>,</span><br><span class="line">             plot_kws=dict(s=<span class="number">50</span>, edgecolor=<span class="string">"b"</span>, linewidth=<span class="number">1</span>),</span><br><span class="line">             <span class="comment"># 设置点样式</span></span><br><span class="line">             diag_kws=dict(shade=<span class="literal">True</span>)</span><br><span class="line">             <span class="comment"># 设置密度图样式</span></span><br><span class="line">            )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.PairGrid at 0x1b21c37be48&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_42_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  矩阵散点图 - PairGrid()</span></span><br><span class="line"><span class="comment"># 可拆分绘制的散点图</span></span><br><span class="line"><span class="comment"># map_diag() + map_offdiag()</span></span><br><span class="line"></span><br><span class="line">g = sns.PairGrid(iris,hue=<span class="string">"species"</span>,palette = <span class="string">'hls'</span>,</span><br><span class="line">                vars = [<span class="string">'sepal_length'</span>,<span class="string">'sepal_width'</span>,<span class="string">'petal_length'</span>,<span class="string">'petal_width'</span>],  <span class="comment"># 可筛选</span></span><br><span class="line">                )</span><br><span class="line"><span class="comment"># 创建一个绘图表格区域，设置好x、y对应数据，按照species分类</span></span><br><span class="line"></span><br><span class="line">g.map_diag(plt.hist, </span><br><span class="line">           histtype = <span class="string">'barstacked'</span>,   <span class="comment"># 可选：'bar', 'barstacked', 'step', 'stepfilled'</span></span><br><span class="line">           linewidth = <span class="number">1</span>, edgecolor = <span class="string">'w'</span>)           </span><br><span class="line"><span class="comment"># 对角线图表，plt.hist/sns.kdeplot</span></span><br><span class="line"></span><br><span class="line">g.map_offdiag(plt.scatter,</span><br><span class="line">              edgecolor=<span class="string">"w"</span>, s=<span class="number">40</span>,linewidth = <span class="number">1</span>,   <span class="comment"># 设置点颜色、大小、描边宽度</span></span><br><span class="line">             )     </span><br><span class="line"><span class="comment"># 其他图表，plt.scatter/plt.bar...</span></span><br><span class="line"></span><br><span class="line">g.add_legend()</span><br><span class="line"><span class="comment"># 添加图例</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.PairGrid at 0x1b218fe3f98&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_43_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 矩阵散点图 - PairGrid()</span></span><br><span class="line"><span class="comment"># 可拆分绘制的散点图</span></span><br><span class="line"><span class="comment"># map_diag() + map_lower() + map_upper()</span></span><br><span class="line"></span><br><span class="line">g = sns.PairGrid(iris)</span><br><span class="line">g.map_diag(sns.kdeplot, lw=<span class="number">3</span>)   <span class="comment"># 设置对角线图表</span></span><br><span class="line">g.map_upper(plt.scatter, color = <span class="string">'r'</span>)     <span class="comment"># 设置对角线上端图表</span></span><br><span class="line">g.map_lower(sns.kdeplot, cmap=<span class="string">"Blues_d"</span>)      <span class="comment"># 设置对角线下端图表</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.PairGrid at 0x1b21ee966a0&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_44_1.png" alt="png"></p><h1 id="4-分类数据可视化"><a href="#4-分类数据可视化" class="headerlink" title="4. 分类数据可视化"></a>4. 分类数据可视化</h1><h2 id="4-1-分类散点图"><a href="#4-1-分类散点图" class="headerlink" title="4.1 分类散点图"></a>4.1 分类散点图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># stripplot()</span></span><br><span class="line"><span class="comment"># 按照不同类别对样本数据进行分布散点图绘制</span></span><br><span class="line"></span><br><span class="line">tips = sns.load_dataset(<span class="string">"tips"</span>)</span><br><span class="line">print(tips.head())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sns.stripplot(x=<span class="string">"day"</span>,          <span class="comment"># x → 设置分组统计字段</span></span><br><span class="line">              y=<span class="string">"total_bill"</span>,   <span class="comment"># y → 数据分布统计字段</span></span><br><span class="line">              <span class="comment"># 这里xy数据对调，将会使得散点图横向分布</span></span><br><span class="line">              data=tips,        <span class="comment"># data → 对应数据</span></span><br><span class="line">              jitter = <span class="literal">True</span>,    <span class="comment"># jitter → 当点数据重合较多时，用该参数做一些调整，也可以设置间距如：jitter = 0.1</span></span><br><span class="line">              size = <span class="number">5</span>, edgecolor = <span class="string">'w'</span>,linewidth=<span class="number">1</span>,marker = <span class="string">'o'</span>  <span class="comment"># 设置点的大小、描边颜色或宽度、点样式</span></span><br><span class="line">              )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   total_bill   tip     sex smoker  day    time  size</span><br><span class="line">0       16.99  1.01  Female     No  Sun  Dinner     2</span><br><span class="line">1       10.34  1.66    Male     No  Sun  Dinner     3</span><br><span class="line">2       21.01  3.50    Male     No  Sun  Dinner     3</span><br><span class="line">3       23.68  3.31    Male     No  Sun  Dinner     2</span><br><span class="line">4       24.59  3.61  Female     No  Sun  Dinner     4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21f971320&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_46_2.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># stripplot()</span></span><br><span class="line"><span class="comment"># 通过hue参数再分类</span></span><br><span class="line"></span><br><span class="line">sns.stripplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>, hue=<span class="string">"day"</span>,</span><br><span class="line">              data=tips, jitter=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21f9b2b00&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_47_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># stripplot()</span></span><br><span class="line"><span class="comment"># 设置调色盘</span></span><br><span class="line"></span><br><span class="line">sns.stripplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>, hue=<span class="string">"day"</span>,</span><br><span class="line">              data=tips, jitter=<span class="literal">True</span>,</span><br><span class="line">              palette=<span class="string">"Set2"</span>,  <span class="comment"># 设置调色盘</span></span><br><span class="line">              dodge=<span class="literal">True</span>,  <span class="comment"># 是否拆分</span></span><br><span class="line">             )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21fc11198&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_48_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># stripplot()</span></span><br><span class="line"><span class="comment"># 筛选分类类别</span></span><br><span class="line"></span><br><span class="line">print(tips[<span class="string">'day'</span>].value_counts())</span><br><span class="line"><span class="comment"># 查看day字段的唯一值</span></span><br><span class="line"></span><br><span class="line">sns.stripplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips,jitter = <span class="literal">True</span>, </span><br><span class="line">              order = [<span class="string">'Sat'</span>,<span class="string">'Sun'</span>])</span><br><span class="line"><span class="comment"># order → 筛选类别</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Sat     87</span><br><span class="line">Sun     76</span><br><span class="line">Thur    62</span><br><span class="line">Fri     19</span><br><span class="line">Name: day, dtype: int64</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21fc8c748&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_49_2.png" alt="png"></p><h2 id="4-2-分簇散点图"><a href="#4-2-分簇散点图" class="headerlink" title="4.2 分簇散点图"></a>4.2 分簇散点图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># swarmplot()</span></span><br><span class="line"><span class="comment"># 分簇散点图</span></span><br><span class="line"></span><br><span class="line">sns.swarmplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"day"</span>, data=tips,</span><br><span class="line">              size = <span class="number">5</span>, edgecolor = <span class="string">'w'</span>,linewidth=<span class="number">1</span>,marker = <span class="string">'o'</span>,</span><br><span class="line">              palette = <span class="string">'Reds'</span>)</span><br><span class="line"><span class="comment"># 用法和stripplot类似</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21fcdef28&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_51_1.png" alt="png"></p><h2 id="4-3-箱型图"><a href="#4-3-箱型图" class="headerlink" title="4.3 箱型图"></a>4.3 箱型图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># boxplot()</span></span><br><span class="line"></span><br><span class="line">sns.boxplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips,</span><br><span class="line">            linewidth = <span class="number">2</span>,   <span class="comment"># 线宽</span></span><br><span class="line">            width = <span class="number">0.8</span>,     <span class="comment"># 箱之间的间隔比例</span></span><br><span class="line">            fliersize = <span class="number">3</span>,   <span class="comment"># 异常点大小</span></span><br><span class="line">            palette = <span class="string">'hls'</span>, <span class="comment"># 设置调色板</span></span><br><span class="line">            whis = <span class="number">1.5</span>,      <span class="comment"># 设置IQR </span></span><br><span class="line">            notch = <span class="literal">True</span>,    <span class="comment"># 设置是否以中值做凹槽</span></span><br><span class="line">            order = [<span class="string">'Thur'</span>,<span class="string">'Fri'</span>,<span class="string">'Sat'</span>,<span class="string">'Sun'</span>],  <span class="comment"># 筛选类别</span></span><br><span class="line">           )</span><br><span class="line"><span class="comment"># 绘制箱型图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sns.swarmplot(x="day", y="total_bill", data=tips,color ='k',size = 3,alpha = 0.8)</span></span><br><span class="line"><span class="comment"># 可以添加散点图</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21fd32710&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_53_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过hue参数再分类</span></span><br><span class="line">sns.boxplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips,</span><br><span class="line">            hue = <span class="string">'smoker'</span>, palette = <span class="string">'Reds'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21fdce5c0&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_54_1.png" alt="png"></p><h1 id="4-4-小提琴图"><a href="#4-4-小提琴图" class="headerlink" title="4.4 小提琴图"></a>4.4 小提琴图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># violinplot()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sns.violinplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips,</span><br><span class="line">            linewidth = <span class="number">2</span>,   <span class="comment"># 线宽</span></span><br><span class="line">            width = <span class="number">0.8</span>,     <span class="comment"># 箱之间的间隔比例</span></span><br><span class="line">            palette = <span class="string">'hls'</span>, <span class="comment"># 设置调色板</span></span><br><span class="line">            order = [<span class="string">'Thur'</span>,<span class="string">'Fri'</span>,<span class="string">'Sat'</span>,<span class="string">'Sun'</span>],  <span class="comment"># 筛选类别</span></span><br><span class="line">            scale = <span class="string">'area'</span>,  <span class="comment"># 测度小提琴图的宽度：area-面积相同，count-按照样本数量决定宽度，width-宽度一样</span></span><br><span class="line">            gridsize = <span class="number">50</span>,   <span class="comment"># 设置小提琴图边线的平滑度，越高越平滑</span></span><br><span class="line">            inner = <span class="string">'box'</span>,   <span class="comment"># 设置内部显示类型 → “box”, “quartile”, “point”, “stick”, None</span></span><br><span class="line">            <span class="comment">#bw = 0.8        # 控制拟合程度，一般可以不设置</span></span><br><span class="line">           )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21feb0d68&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_56_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过hue参数再分类</span></span><br><span class="line"></span><br><span class="line">sns.violinplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips,</span><br><span class="line">               hue = <span class="string">'smoker'</span>, palette=<span class="string">"muted"</span>, </span><br><span class="line">               split=<span class="literal">True</span>,  <span class="comment"># 设置是否拆分小提琴图</span></span><br><span class="line">               inner=<span class="string">"quartile"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21ff37940&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_57_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 结合散点图</span></span><br><span class="line"></span><br><span class="line">sns.violinplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette = <span class="string">'hls'</span>, inner = <span class="literal">None</span>)</span><br><span class="line">sns.swarmplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, color=<span class="string">"w"</span>, alpha=<span class="number">.5</span>)</span><br><span class="line"><span class="comment"># 插入散点图</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21fff0e80&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_58_1.png" alt="png"></p><h2 id="4-5-LV图"><a href="#4-5-LV图" class="headerlink" title="4.5 LV图"></a>4.5 LV图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  lvplot()</span></span><br><span class="line">sns.lvplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"mako"</span>,</span><br><span class="line">           <span class="comment">#hue = 'smoker',</span></span><br><span class="line">           width = <span class="number">0.8</span>,           <span class="comment"># 箱之间间隔比例</span></span><br><span class="line">           linewidth = <span class="number">12</span>,</span><br><span class="line">           scale = <span class="string">'area'</span>,        <span class="comment"># 设置框的大小 → “linear”、“exonential”、“area”</span></span><br><span class="line">           k_depth = <span class="string">'proportion'</span>,  <span class="comment"># 设置框的数量 → “proportion”、“tukey”、“trustworthy”</span></span><br><span class="line">          )</span><br><span class="line"><span class="comment"># 绘制LV图</span></span><br><span class="line"></span><br><span class="line">sns.swarmplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips,color =<span class="string">'k'</span>,size = <span class="number">3</span>,alpha = <span class="number">0.8</span>)</span><br><span class="line"><span class="comment"># 可以添加散点图</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b22101c400&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_60_1.png" alt="png"></p><h1 id="4-6分类统计图"><a href="#4-6分类统计图" class="headerlink" title="4.6分类统计图"></a>4.6分类统计图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># barplot()</span></span><br><span class="line"><span class="comment"># 柱状图 - 置信区间估计</span></span><br><span class="line"><span class="comment"># 置信区间：样本均值 + 抽样误差</span></span><br><span class="line"></span><br><span class="line">titanic = sns.load_dataset(<span class="string">"titanic"</span>)</span><br><span class="line"><span class="comment">#print(titanic.head())</span></span><br><span class="line"><span class="comment">#print('-----')</span></span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line"></span><br><span class="line">sns.barplot(x=<span class="string">"sex"</span>, y=<span class="string">"survived"</span>, hue=<span class="string">"class"</span>, data=titanic,</span><br><span class="line">            palette = <span class="string">'hls'</span>, </span><br><span class="line">            order = [<span class="string">'male'</span>,<span class="string">'female'</span>],  <span class="comment"># 筛选类别</span></span><br><span class="line">            capsize = <span class="number">0.05</span>,  <span class="comment"># 误差线横向延伸宽度</span></span><br><span class="line">            saturation=<span class="number">.8</span>,   <span class="comment"># 颜色饱和度</span></span><br><span class="line">            errcolor = <span class="string">'gray'</span>,errwidth = <span class="number">2</span>,  <span class="comment"># 误差线颜色，宽度</span></span><br><span class="line">            ci = <span class="string">'sd'</span>    <span class="comment"># 置信区间误差 → 0-100内值、'sd'、None</span></span><br><span class="line">            )</span><br><span class="line"><span class="comment">#print(titanic.groupby(['sex','class']).mean()['survived'])</span></span><br><span class="line"><span class="comment">#print(titanic.groupby(['sex','class']).std()['survived'])</span></span><br><span class="line"><span class="comment"># 计算数据</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b2210a1048&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_62_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># barplot()</span></span><br><span class="line"><span class="comment"># 柱状图 - 置信区间估计</span></span><br><span class="line"></span><br><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, hue=<span class="string">"sex"</span>, data=tips,</span><br><span class="line">            palette = <span class="string">'Blues'</span>,edgecolor = <span class="string">'w'</span>)</span><br><span class="line">tips.groupby([<span class="string">'day'</span>,<span class="string">'sex'</span>]).mean()</span><br><span class="line"><span class="comment"># 计算数据</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.dataframe tbody tr th &#123;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.dataframe thead th &#123;</span><br><span class="line">    text-align: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>size</th>    </tr>    <tr>      <th>day</th>      <th>sex</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="2" valign="top">Thur</th>      <th>Male</th>      <td>18.714667</td>      <td>2.980333</td>      <td>2.433333</td>    </tr>    <tr>      <th>Female</th>      <td>16.715312</td>      <td>2.575625</td>      <td>2.468750</td>    </tr>    <tr>      <th rowspan="2" valign="top">Fri</th>      <th>Male</th>      <td>19.857000</td>      <td>2.693000</td>      <td>2.100000</td>    </tr>    <tr>      <th>Female</th>      <td>14.145556</td>      <td>2.781111</td>      <td>2.111111</td>    </tr>    <tr>      <th rowspan="2" valign="top">Sat</th>      <th>Male</th>      <td>20.802542</td>      <td>3.083898</td>      <td>2.644068</td>    </tr>    <tr>      <th>Female</th>      <td>19.680357</td>      <td>2.801786</td>      <td>2.250000</td>    </tr>    <tr>      <th rowspan="2" valign="top">Sun</th>      <th>Male</th>      <td>21.887241</td>      <td>3.220345</td>      <td>2.810345</td>    </tr>    <tr>      <th>Female</th>      <td>19.872222</td>      <td>3.367222</td>      <td>2.944444</td>    </tr>  </tbody></table></div><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_63_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、barplot()</span></span><br><span class="line"><span class="comment"># 柱状图 - 置信区间估计</span></span><br><span class="line"></span><br><span class="line">crashes = sns.load_dataset(<span class="string">"car_crashes"</span>).sort_values(<span class="string">"total"</span>, ascending=<span class="literal">False</span>)</span><br><span class="line">print(crashes.head())</span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line"></span><br><span class="line">f, ax = plt.subplots(figsize=(<span class="number">6</span>, <span class="number">15</span>))</span><br><span class="line"><span class="comment"># 创建图表</span></span><br><span class="line"></span><br><span class="line">sns.set_color_codes(<span class="string">"pastel"</span>)</span><br><span class="line">sns.barplot(x=<span class="string">"total"</span>, y=<span class="string">"abbrev"</span>, data=crashes,</span><br><span class="line">            label=<span class="string">"Total"</span>, color=<span class="string">"b"</span>,edgecolor = <span class="string">'w'</span>)</span><br><span class="line"><span class="comment"># 设置第一个柱状图</span></span><br><span class="line"></span><br><span class="line">sns.set_color_codes(<span class="string">"muted"</span>)</span><br><span class="line">sns.barplot(x=<span class="string">"alcohol"</span>, y=<span class="string">"abbrev"</span>, data=crashes,</span><br><span class="line">            label=<span class="string">"Alcohol-involved"</span>, color=<span class="string">"b"</span>,edgecolor = <span class="string">'w'</span>)</span><br><span class="line"><span class="comment"># 设置第二个柱状图</span></span><br><span class="line"></span><br><span class="line">ax.legend(ncol=<span class="number">2</span>, loc=<span class="string">"lower right"</span>)</span><br><span class="line">sns.despine(left=<span class="literal">True</span>, bottom=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    total  speeding  alcohol  not_distracted  no_previous  ins_premium  \</span><br><span class="line">40   23.9     9.082    9.799          22.944       19.359       858.97   </span><br><span class="line">34   23.9     5.497   10.038          23.661       20.554       688.75   </span><br><span class="line">48   23.8     8.092    6.664          23.086       20.706       992.61   </span><br><span class="line">3    22.4     4.032    5.824          21.056       21.280       827.34   </span><br><span class="line">17   21.4     4.066    4.922          16.692       16.264       872.51   </span><br><span class="line"></span><br><span class="line">    ins_losses abbrev  </span><br><span class="line">40      116.29     SC  </span><br><span class="line">34      109.72     ND  </span><br><span class="line">48      152.56     WV  </span><br><span class="line">3       142.39     AR  </span><br><span class="line">17      137.13     KY</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_64_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  countplot()</span></span><br><span class="line"><span class="comment"># 计数柱状图</span></span><br><span class="line"></span><br><span class="line">sns.countplot(x=<span class="string">"class"</span>, hue=<span class="string">"who"</span>, data=titanic,palette = <span class="string">'magma'</span>)</span><br><span class="line"><span class="comment">#sns.countplot(y="class", hue="who", data=titanic,palette = 'magma')  </span></span><br><span class="line"><span class="comment"># x/y → 以x或者y轴绘图（横向，竖向）</span></span><br><span class="line"><span class="comment"># 用法和barplot相似</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b22117aac8&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_65_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pointplot()</span></span><br><span class="line"><span class="comment"># 折线图 - 置信区间估计</span></span><br><span class="line"></span><br><span class="line">sns.pointplot(x=<span class="string">"time"</span>, y=<span class="string">"total_bill"</span>, hue = <span class="string">'smoker'</span>,data=tips,</span><br><span class="line">              palette = <span class="string">'hls'</span>,</span><br><span class="line">              dodge = <span class="literal">True</span>,   <span class="comment"># 设置点是否分开</span></span><br><span class="line">              join = <span class="literal">True</span>,    <span class="comment"># 是否连线</span></span><br><span class="line">              markers=[<span class="string">"o"</span>, <span class="string">"x"</span>], linestyles=[<span class="string">"-"</span>, <span class="string">"--"</span>],  <span class="comment"># 设置点样式、线型</span></span><br><span class="line">              )</span><br><span class="line">tips.groupby([<span class="string">'time'</span>,<span class="string">'smoker'</span>]).mean()[<span class="string">'total_bill'</span>]</span><br><span class="line"><span class="comment"># 计算数据</span></span><br><span class="line"><span class="comment"># # 用法和barplot相似</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">time    smoker</span><br><span class="line">Lunch   Yes       17.399130</span><br><span class="line">        No        17.050889</span><br><span class="line">Dinner  Yes       21.859429</span><br><span class="line">        No        20.095660</span><br><span class="line">Name: total_bill, dtype: float64</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_66_1.png" alt="png"></p><h1 id="5-线性数据可视化"><a href="#5-线性数据可视化" class="headerlink" title="5.线性数据可视化"></a>5.线性数据可视化</h1><h2 id="5-1基本使用"><a href="#5-1基本使用" class="headerlink" title="5.1基本使用"></a>5.1基本使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本用法</span></span><br><span class="line"></span><br><span class="line">tips = sns.load_dataset(<span class="string">"tips"</span>)</span><br><span class="line">print(tips.head())</span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line"></span><br><span class="line">sns.lmplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, hue = <span class="string">'smoker'</span>,data=tips,palette=<span class="string">"Set1"</span>,</span><br><span class="line">           ci = <span class="number">70</span>,   <span class="comment"># 误差值</span></span><br><span class="line">           size = <span class="number">5</span>,  <span class="comment"># 图表大小</span></span><br><span class="line">           markers = [<span class="string">'+'</span>,<span class="string">'o'</span>],  <span class="comment"># 点样式</span></span><br><span class="line">           )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   total_bill   tip     sex smoker  day    time  size</span><br><span class="line">0       16.99  1.01  Female     No  Sun  Dinner     2</span><br><span class="line">1       10.34  1.66    Male     No  Sun  Dinner     3</span><br><span class="line">2       21.01  3.50    Male     No  Sun  Dinner     3</span><br><span class="line">3       23.68  3.31    Male     No  Sun  Dinner     2</span><br><span class="line">4       24.59  3.61  Female     No  Sun  Dinner     4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.FacetGrid at 0x1b21c57d7b8&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_68_2.png" alt="png"></p><h2 id="5-2-多表格"><a href="#5-2-多表格" class="headerlink" title="5.2 多表格"></a>5.2 多表格</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, col=<span class="string">"smoker"</span>, data=tips)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.FacetGrid at 0x1b2215774e0&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_70_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多图表1</span></span><br><span class="line"></span><br><span class="line">sns.lmplot(x=<span class="string">"size"</span>, y=<span class="string">"total_bill"</span>, hue=<span class="string">"day"</span>, col=<span class="string">"day"</span>,data=tips, </span><br><span class="line">           aspect=<span class="number">0.6</span>,    <span class="comment"># 长宽比</span></span><br><span class="line">           x_jitter=<span class="number">.30</span>,  <span class="comment"># 给x或者y轴随机增加噪音点</span></span><br><span class="line">           col_wrap=<span class="number">4</span>,    <span class="comment"># 每行的列数</span></span><br><span class="line">          )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.FacetGrid at 0x1b2216276a0&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_71_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多图表2</span></span><br><span class="line"></span><br><span class="line">sns.lmplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, row=<span class="string">"sex"</span>, col=<span class="string">"time"</span>,data=tips, size=<span class="number">4</span>)</span><br><span class="line"><span class="comment"># 行为sex字段，列为time字段</span></span><br><span class="line"><span class="comment"># x轴total_bill, y轴tip</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.FacetGrid at 0x1b22160a400&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_72_1.png" alt="png"></p><h2 id="5-3-非线性回归"><a href="#5-3-非线性回归" class="headerlink" title="5.3 非线性回归"></a>5.3 非线性回归</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 非线性回归</span></span><br><span class="line"></span><br><span class="line">sns.lmplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>,data=tips,</span><br><span class="line">           order = <span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.FacetGrid at 0x1b2214d7b00&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_74_1.png" alt="png"></p><h1 id="6-其他图表可视化"><a href="#6-其他图表可视化" class="headerlink" title="6. 其他图表可视化"></a>6. 其他图表可视化</h1><h2 id="6-1-时间线图"><a href="#6-1-时间线图" class="headerlink" title="6.1 时间线图"></a>6.1 时间线图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  tsplot()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">15</span>, <span class="number">31</span>)</span><br><span class="line">data = np.sin(x) + np.random.rand(<span class="number">10</span>, <span class="number">31</span>) + np.random.randn(<span class="number">10</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment">#print(data.shape)</span></span><br><span class="line"><span class="comment">#print(pd.DataFrame(data).head())</span></span><br><span class="line"><span class="comment"># 创建数据</span></span><br><span class="line"></span><br><span class="line">sns.tsplot(data=data,</span><br><span class="line">           err_style=<span class="string">"ci_band"</span>,   <span class="comment"># 误差数据风格，可选：ci_band, ci_bars, boot_traces, boot_kde, unit_traces, unit_points</span></span><br><span class="line">           interpolate=<span class="literal">True</span>,      <span class="comment"># 是否连线</span></span><br><span class="line">           ci = [<span class="number">40</span>,<span class="number">70</span>,<span class="number">90</span>],       <span class="comment"># 设置误差区间 </span></span><br><span class="line">           color = <span class="string">'r'</span>            <span class="comment"># 设置颜色</span></span><br><span class="line">          )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b21668c860&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_76_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.tsplot(data=data, err_style=<span class="string">"boot_traces"</span>, </span><br><span class="line">           n_boot=<span class="number">300</span>   <span class="comment"># 迭代次数</span></span><br><span class="line">          )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b216533048&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_77_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">gammas = sns.load_dataset(<span class="string">"gammas"</span>)</span><br><span class="line">print(gammas.head())</span><br><span class="line">print(<span class="string">'数据量为：%i条'</span> % len(gammas))</span><br><span class="line">print(<span class="string">'timepoint为0.0时的数据量为：%i条'</span> % len(gammas[gammas[<span class="string">'timepoint'</span>] == <span class="number">0</span>]))</span><br><span class="line">print(<span class="string">'timepoint共有%i个唯一值'</span> % len(gammas[<span class="string">'timepoint'</span>].value_counts()))</span><br><span class="line"><span class="comment">#print(gammas['timepoint'].value_counts())  # 查看唯一值具体信息</span></span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line"></span><br><span class="line">sns.tsplot(time=<span class="string">"timepoint"</span>,     <span class="comment"># 时间数据，x轴</span></span><br><span class="line">           value=<span class="string">"BOLD signal"</span>,  <span class="comment"># y轴value</span></span><br><span class="line">           unit=<span class="string">"subject"</span>,       <span class="comment"># </span></span><br><span class="line">           condition=<span class="string">"ROI"</span>,      <span class="comment"># 分类</span></span><br><span class="line">           data=gammas)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   timepoint  ROI  subject  BOLD signal</span><br><span class="line">0        0.0  IPS        0     0.513433</span><br><span class="line">1        0.0  IPS        1    -0.414368</span><br><span class="line">2        0.0  IPS        2     0.214695</span><br><span class="line">3        0.0  IPS        3     0.814809</span><br><span class="line">4        0.0  IPS        4    -0.894992</span><br><span class="line">数据量为：6000条</span><br><span class="line">timepoint为0.0时的数据量为：60条</span><br><span class="line">timepoint共有100个唯一值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b221f95a58&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_78_2.png" alt="png"></p><h2 id="6-2-热图"><a href="#6-2-热图" class="headerlink" title="6.2 热图"></a>6.2 热图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 热图 - heatmap()</span></span><br><span class="line"><span class="comment"># 简单示例</span></span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(np.random.rand(<span class="number">10</span>,<span class="number">15</span>))</span><br><span class="line"><span class="comment"># 创建数据 - 10*12图表</span></span><br><span class="line"></span><br><span class="line">sns.heatmap(df,    <span class="comment"># 加载数据</span></span><br><span class="line">            vmin=<span class="number">0</span>, vmax=<span class="number">1</span>   <span class="comment"># 设置图例最大最小值</span></span><br><span class="line">            )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b221faac88&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_80_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># heatmap()</span></span><br><span class="line"><span class="comment"># 参数设置</span></span><br><span class="line"></span><br><span class="line">flights = sns.load_dataset(<span class="string">"flights"</span>)</span><br><span class="line">flights = flights.pivot(<span class="string">"month"</span>, <span class="string">"year"</span>, <span class="string">"passengers"</span>) </span><br><span class="line"><span class="comment">#print(flights.head())</span></span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line">           </span><br><span class="line">sns.heatmap(flights,</span><br><span class="line">            annot = <span class="literal">True</span>,      <span class="comment"># 是否显示数值</span></span><br><span class="line">            fmt = <span class="string">'d'</span>,         <span class="comment"># 格式化字符串</span></span><br><span class="line">            linewidths = <span class="number">0.2</span>,  <span class="comment"># 格子边线宽度</span></span><br><span class="line">            <span class="comment">#center = 100,      # 调色盘的色彩中心值，若没有指定，则以cmap为主</span></span><br><span class="line">            <span class="comment">#cmap = 'Reds',     # 设置调色盘</span></span><br><span class="line">            cbar = <span class="literal">True</span>,       <span class="comment"># 是否显示图例色带</span></span><br><span class="line">            <span class="comment">#cbar_kws=&#123;"orientation": "horizontal"&#125;,   # 是否横向显示图例色带</span></span><br><span class="line">            <span class="comment">#square = True,     # 是否正方形显示图表</span></span><br><span class="line">           )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b223040588&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_81_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  heatmap()</span></span><br><span class="line"><span class="comment"># 绘制半边热图</span></span><br><span class="line"></span><br><span class="line">sns.set(style=<span class="string">"white"</span>)</span><br><span class="line"><span class="comment"># 设置风格</span></span><br><span class="line"></span><br><span class="line">rs = np.random.RandomState(<span class="number">33</span>)</span><br><span class="line">d = pd.DataFrame(rs.normal(size=(<span class="number">100</span>, <span class="number">26</span>)))</span><br><span class="line">corr = d.corr()   <span class="comment"># 求解相关性矩阵表格</span></span><br><span class="line"><span class="comment"># 创建数据</span></span><br><span class="line"></span><br><span class="line">mask = np.zeros_like(corr, dtype=np.bool)</span><br><span class="line">mask[np.triu_indices_from(mask)] = <span class="literal">True</span></span><br><span class="line"><span class="comment"># 设置一个“上三角形”蒙版</span></span><br><span class="line"></span><br><span class="line">cmap = sns.diverging_palette(<span class="number">220</span>, <span class="number">10</span>, as_cmap=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 设置调色盘</span></span><br><span class="line"></span><br><span class="line">sns.heatmap(corr, mask=mask, cmap=cmap, vmax=<span class="number">.3</span>, center=<span class="number">0</span>,</span><br><span class="line">            square=<span class="literal">True</span>, linewidths=<span class="number">0.2</span>)</span><br><span class="line"><span class="comment"># 生成半边热图</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;matplotlib.axes._subplots.AxesSubplot at 0x1b2231f3128&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_82_1.png" alt="png"></p><h2 id="6-3-图标矩阵"><a href="#6-3-图标矩阵" class="headerlink" title="6.3 图标矩阵"></a>6.3 图标矩阵</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">attend = sns.load_dataset(<span class="string">"attention"</span>)</span><br><span class="line">print(attend.head())</span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line"></span><br><span class="line">g = sns.FacetGrid(attend, col=<span class="string">"subject"</span>, col_wrap=<span class="number">5</span>,   <span class="comment"># 设置每行的图表数量</span></span><br><span class="line">                  size=<span class="number">1.5</span>)</span><br><span class="line">g.map(plt.plot, <span class="string">"solutions"</span>, <span class="string">"score"</span>, </span><br><span class="line">      marker=<span class="string">"o"</span>,color = <span class="string">'gray'</span>,linewidth = <span class="number">2</span>)</span><br><span class="line"><span class="comment"># 绘制图表矩阵</span></span><br><span class="line"></span><br><span class="line">g.set(xlim = (<span class="number">0</span>,<span class="number">4</span>),</span><br><span class="line">      ylim = (<span class="number">0</span>,<span class="number">10</span>),</span><br><span class="line">      xticks = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],</span><br><span class="line">      yticks = [<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>]</span><br><span class="line">      )</span><br><span class="line"><span class="comment"># 设置x，y轴刻度</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   Unnamed: 0  subject attention  solutions  score</span><br><span class="line">0           0        1   divided          1    2.0</span><br><span class="line">1           1        2   divided          1    3.0</span><br><span class="line">2           2        3   divided          1    3.0</span><br><span class="line">3           3        4   divided          1    5.0</span><br><span class="line">4           4        5   divided          1    4.0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;seaborn.axisgrid.FacetGrid at 0x1b22328cb00&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/Seaborn%E9%A3%8E%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/output_84_2.png" alt="png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-Seaborn风格可视化&quot;&gt;&lt;a href=&quot;#1-Seaborn风格可视化&quot; class=&quot;headerlink&quot; title=&quot;1.Seaborn风格可视化&quot;&gt;&lt;/a&gt;1.Seaborn风格可视化&lt;/h1&gt;&lt;h2 id=&quot;1-1-什么事seaborn&quot;&gt;&lt;a href=&quot;#1-1-什么事seaborn&quot; class=&quot;headerlink&quot; title=&quot;1.1 什么事seaborn&quot;&gt;&lt;/a&gt;1.1 什么事seaborn&lt;/h2&gt;&lt;p&gt;​       Seaborn是基于matplotlib的图形可视化python包。它提供了一种高度交互式界面，便于用户能够做出各种有吸引力的统计图表。Seaborn是在matplotlib的基础上进行了更高级的API封装，从而使得作图更加容易，在大多数情况下使用seaborn能做出很具有吸引力的图，而使用matplotlib就能制作具有更多特色的图。应该把Seaborn视为matplotlib的补充，而不是替代物。同时它能高度兼容numpy与pandas数据结构以及scipy与statsmodels等统计模式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据分析" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="数据分析" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="matplotlib" scheme="http://yoursite.com/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>特征工程(一)</title>
    <link href="http://yoursite.com/2019/09/21/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B-%E4%B8%80/"/>
    <id>http://yoursite.com/2019/09/21/特征工程-一/</id>
    <published>2019-09-21T03:29:58.000Z</published>
    <updated>2019-09-26T14:22:34.230Z</updated>
    
    <content type="html"><![CDATA[<p>fit,fit_transform,transform的区别</p><p>fit在训练模型的时候使用</p><p>fit_transform的作用是先拟合数据，然后将其转换成标准形式，一般是用在训练集上，例如StandardScaler计算出标准差</p><p>transfrom：指的是直接对数据进行标准化，直接用·训练集拟合的结果进行标准化或者归一化</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;fit,fit_transform,transform的区别&lt;/p&gt;
&lt;p&gt;fit在训练模型的时候使用&lt;/p&gt;
&lt;p&gt;fit_transform的作用是先拟合数据，然后将其转换成标准形式，一般是用在训练集上，例如StandardScaler计算出标准差&lt;/p&gt;
&lt;p&gt;tra
      
    
    </summary>
    
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="特征工程" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据降维" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E9%99%8D%E7%BB%B4/"/>
    
      <category term="特征工程" scheme="http://yoursite.com/tags/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>hive的基本操作</title>
    <link href="http://yoursite.com/2019/09/17/hive%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2019/09/17/hive的基本操作/</id>
    <published>2019-09-17T13:57:11.000Z</published>
    <updated>2019-10-01T15:05:15.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="表的增删改查操作"><a href="#表的增删改查操作" class="headerlink" title="表的增删改查操作"></a>表的增删改查操作</h1><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><p>使用if not exists 如果存在则跳过，comment为注释。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> mydb.employees(</span><br><span class="line"><span class="keyword">name</span> <span class="keyword">string</span> <span class="keyword">comment</span> <span class="string">'Employee name'</span>,</span><br><span class="line">salary <span class="built_in">float</span> <span class="keyword">comment</span> <span class="string">'Employee salary'</span>,</span><br><span class="line">subordinates <span class="built_in">array</span>&lt;<span class="keyword">string</span>&gt; <span class="keyword">comment</span> <span class="string">'Names of subordinates'</span>,</span><br><span class="line">deduction <span class="keyword">map</span>&lt;<span class="keyword">string</span>, <span class="built_in">float</span>&gt;,</span><br><span class="line">address <span class="keyword">struct</span>&lt;street:<span class="keyword">string</span>, city:<span class="keyword">string</span>, state:<span class="keyword">string</span>, zip:<span class="built_in">int</span>&gt; <span class="keyword">comment</span> <span class="string">'Home address'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">comment</span> <span class="string">'descriptions of table'</span></span><br><span class="line">location <span class="string">'/user/hive/warehouse/mydb.db/employees'</span>;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="描述表"><a href="#描述表" class="headerlink" title="描述表"></a>描述表</h2><p>显示表的字段和结构，使用desc/describe </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--显示表的字段和数据类型</span></span><br><span class="line">desc table_name;</span><br><span class="line"><span class="comment">--显示对应字段的数据类型</span></span><br><span class="line">desc table_name.columns</span><br></pre></td></tr></table></figure><h2 id="管理表和外部表"><a href="#管理表和外部表" class="headerlink" title="管理表和外部表"></a>管理表和外部表</h2><p><strong>管理表</strong>是hive创建的表，由hive控制其生命周期，hive默认情况下会将数据存在在配置文件指定的目录当中，由hive.metastore.warehouse.dir指定。当使用hive删除表的时候，对应的数据也会被删除，即hdfs文件系统中的数据也会被删除。管理表的缺点在于无法共享数据，比如利用pig等工具创建的数据，hive对其没有权限。当使用hive查询这些数据的时候就可以使用一个外部表指向这份数据，而不需要对其的权限。外部表需要使用external修饰。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> stocks(</span><br><span class="line"><span class="keyword">exchange</span><span class="keyword">string</span>,</span><br><span class="line">symbol<span class="keyword">string</span>,</span><br><span class="line">ymd<span class="keyword">string</span>,</span><br><span class="line">price__open<span class="keyword">string</span>,</span><br><span class="line">price__high<span class="keyword">string</span>,</span><br><span class="line">price__low<span class="keyword">string</span>,</span><br><span class="line">price__close<span class="built_in">float</span>,</span><br><span class="line">volume<span class="built_in">int</span>,</span><br><span class="line">price_adj_close<span class="built_in">float</span>)</span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">','</span> <span class="string">'分隔符为,'</span></span><br><span class="line">location <span class="string">'data/stocks'</span>;</span><br></pre></td></tr></table></figure><p>加上external字段值后，删除表并不会删除这份数据，不过描述标的元数据信息会被删除。元数据可以理解为对该表的描述信息，而不是表内数据。</p><p>需要注意的是如果语句省略了external关键字同事源表是外部表，那么新表也是外部表，如果源表是管理表，新表也是管理表。在加上external之后，无论源表是管理表还是外部表，新表都是外部表。</p><h2 id="分区表"><a href="#分区表" class="headerlink" title="分区表"></a>分区表</h2><p>在建表过程中，会根据分区字段创建对应目录，优点在于分层存储，可以加快查询速度，而缺点在于一些数据存在于文件目录下，但是hive只能从表中读取数据，因此会造成资源浪费。分区表创建：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employees(</span><br><span class="line"><span class="keyword">name</span><span class="keyword">string</span>,</span><br><span class="line">salary<span class="built_in">float</span>,</span><br><span class="line">subordinates<span class="built_in">array</span>&lt;<span class="keyword">string</span>&gt;,</span><br><span class="line">deduction<span class="keyword">map</span>&lt;<span class="keyword">string</span>,<span class="built_in">float</span>&gt;,</span><br><span class="line">address<span class="keyword">struct</span>&lt;street:<span class="keyword">string</span>, city:<span class="keyword">string</span>, city:<span class="keyword">string</span>, state:<span class="keyword">string</span>&gt;</span><br><span class="line">)</span><br><span class="line">partitioned <span class="keyword">by</span> (country <span class="keyword">string</span>, state <span class="keyword">string</span>);</span><br></pre></td></tr></table></figure><p>在建表的时候hive在hdfs上的目录为…/employees/country/state</p><p>查看表中存在所有分区</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">partitions</span> employees;</span><br></pre></td></tr></table></figure><p>查询指定分区</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">partitions</span> employees <span class="keyword">partition</span>(country=<span class="string">'CHINA'</span>)</span><br></pre></td></tr></table></figure><h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> table_name;</span><br></pre></td></tr></table></figure><p>对于管理表，表的元数据和表内数据都会被删除。</p><h2 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h2><h3 id="表的重命名"><a href="#表的重命名" class="headerlink" title="　表的重命名"></a>　表的重命名</h3><p>将表从ａ重命名为ｂ</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> a <span class="keyword">rename</span> <span class="keyword">to</span> b;</span><br></pre></td></tr></table></figure><h3 id="增加表分区"><a href="#增加表分区" class="headerlink" title="增加表分区"></a>增加表分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">add</span> partiion</span><br><span class="line"><span class="comment">--在一个查询语句中增加多个分区</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> </span><br><span class="line"><span class="keyword">partition</span>(...) location <span class="string">'/user/hive/warehouse/a'</span></span><br><span class="line"><span class="keyword">partition</span>(...) location <span class="string">'/user/hive/warehouse/b'</span></span><br><span class="line"><span class="keyword">partition</span>(...) location <span class="string">'/user/hive/warehouse/c'</span></span><br></pre></td></tr></table></figure><h3 id="修改列的信息"><a href="#修改列的信息" class="headerlink" title="修改列的信息"></a>修改列的信息</h3><p>将列名从a改到b，并且将其移到serverity字段后面。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">change</span> </span><br><span class="line"><span class="keyword">column</span> a b type_name <span class="string">'修改列的数据类型'</span></span><br><span class="line"><span class="keyword">comment</span> <span class="string">'xxx'</span></span><br><span class="line"><span class="keyword">after</span> serverity</span><br></pre></td></tr></table></figure><h3 id="增加新的列"><a href="#增加新的列" class="headerlink" title="增加新的列"></a>增加新的列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">add</span> <span class="keyword">column</span>(</span><br><span class="line">    app_name <span class="keyword">string</span> <span class="keyword">comment</span> <span class="string">'Application name'</span>,</span><br><span class="line">    session_id <span class="keyword">long</span> <span class="keyword">comment</span> <span class="string">'the current session id'</span>;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="删除或替换列"><a href="#删除或替换列" class="headerlink" title="删除或替换列"></a>删除或替换列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span>  table_name <span class="keyword">replace</span> <span class="keyword">columns</span>（</span><br><span class="line">hour_mins_secs <span class="built_in">INT</span> <span class="keyword">comment</span> <span class="string">'xxx'</span></span><br><span class="line">severity <span class="keyword">string</span> <span class="keyword">comment</span> <span class="string">'xxx'</span>;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>将之前的列都删除，只留下replace的列</p><h3 id="修改表的属性"><a href="#修改表的属性" class="headerlink" title="修改表的属性"></a>修改表的属性</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">set</span> tblproperties(<span class="string">'notes'</span>=<span class="string">'xxx'</span>);</span><br></pre></td></tr></table></figure><h3 id="修改表的存储属性"><a href="#修改表的存储属性" class="headerlink" title="修改表的存储属性"></a>修改表的存储属性</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">partition</span>(a=xxx,b=xxx,c=xxx) <span class="keyword">set</span> fileformat sequencefile;</span><br></pre></td></tr></table></figure><p>指定对应的分区中的表，并且重新设置其格式。</p><h1 id="加载和导出数据"><a href="#加载和导出数据" class="headerlink" title="加载和导出数据"></a>加载和导出数据</h1><h2 id="从本地加载数据"><a href="#从本地加载数据" class="headerlink" title="从本地加载数据"></a>从本地加载数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">local</span> inpath <span class="string">'/home/hadopp/data.txt'</span></span><br><span class="line">overwrite <span class="keyword">into</span> <span class="keyword">table</span> employees</span><br><span class="line"><span class="keyword">partition</span>(country=<span class="string">'US'</span>,state=<span class="string">'CA'</span>);</span><br></pre></td></tr></table></figure><p>需要注意的是创建分区表的时候使用的是partition by。如果目录不存在，hive会先创建分区目录。</p><h2 id="通过查询语句加载数据"><a href="#通过查询语句加载数据" class="headerlink" title="通过查询语句加载数据"></a>通过查询语句加载数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> employees</span><br><span class="line"><span class="keyword">partition</span>(country=<span class="string">'US'</span>,state=<span class="string">'CA'</span>)</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table_name <span class="keyword">where</span> xxx=xxx;</span><br></pre></td></tr></table></figure><h2 id="通过查询语句建表"><a href="#通过查询语句建表" class="headerlink" title="通过查询语句建表"></a>通过查询语句建表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> table_name <span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table_name_b;</span><br></pre></td></tr></table></figure><h2 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方法一，谁用hadoop提供的工具</span></span><br><span class="line">hadoop fs -cp source_path target_path</span><br><span class="line"><span class="comment">--方法二</span></span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">local</span> <span class="keyword">directory</span> <span class="string">'/home/hadoop/employees'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employees;</span><br></pre></td></tr></table></figure><h1 id="hive的连接操作"><a href="#hive的连接操作" class="headerlink" title="hive的连接操作"></a>hive的连接操作</h1><p>table stu</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1chenli21</span><br><span class="line">2xuzeng22</span><br><span class="line">3xiaodan23</span><br><span class="line">4hua24</span><br></pre></td></tr></table></figure><p>table sub</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1chinese</span><br><span class="line">2english</span><br><span class="line">3science</span><br><span class="line">5nature</span><br></pre></td></tr></table></figure><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h2><p>inner join，关键字 join on。仅列出两个表中符合连接条件的数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.*,b.* <span class="keyword">from</span> stu a <span class="keyword">join</span> sub b <span class="keyword">on</span> a.id=b.id</span><br><span class="line"><span class="comment">--结果</span></span><br><span class="line"><span class="number">1</span>chenli<span class="number">21</span><span class="number">1</span>chinese</span><br><span class="line"><span class="number">2</span>xuzeng<span class="number">22</span><span class="number">2</span>english</span><br><span class="line"><span class="number">3</span>xiaodan<span class="number">23</span><span class="number">3</span>science</span><br></pre></td></tr></table></figure><p>join后面连接表，而on指定连接条件。</p><h2 id="左连接和右连接"><a href="#左连接和右连接" class="headerlink" title="左连接和右连接"></a>左连接和右连接</h2><p>左连接，显示左边表的所有数据，如果右边表有与之对应的数据则显示，否则显示为NULL。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.* <span class="keyword">from</span> stu a <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> sub b <span class="keyword">on</span> a.id=b.id;</span><br><span class="line"><span class="comment">--结果</span></span><br><span class="line">1chenli211chinese</span><br><span class="line">2xuzeng222english</span><br><span class="line">3xiaodan233science</span><br><span class="line">4hua24NULLNULL</span><br></pre></td></tr></table></figure><p>右连接与左连接相反，使用的关键字为 <strong>right outer  join xxx on xxx</strong>。</p><p>标准查询关键字执行顺序为 from-&gt;where-&gt;group by-&gt;having-&gt;order by。</p><h2 id="全连接"><a href="#全连接" class="headerlink" title="全连接"></a>全连接</h2><p>左表和右表都显示，如果没有对应数据，则都显示为NULL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.* <span class="keyword">from</span> stu a <span class="keyword">full</span> <span class="keyword">outer</span> <span class="keyword">join</span> sub b <span class="keyword">on</span> a.id=b.id;</span><br><span class="line"><span class="comment">--结果</span></span><br><span class="line">1chenli211chinese</span><br><span class="line">2xuzeng222english</span><br><span class="line">3xiaodan233science</span><br><span class="line">4hua24NULLNULL</span><br><span class="line">NULLNULLNULL5nature</span><br></pre></td></tr></table></figure><h2 id="左半开连接"><a href="#左半开连接" class="headerlink" title="左半开连接"></a>左半开连接</h2><p>左半开连接。left semi join，语法与左连接不一样，只能选择出左边表的数据，此数据符合on后面的条件。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.* <span class="keyword">from</span> stu a <span class="keyword">left</span> <span class="keyword">semi</span> <span class="keyword">join</span> sub b <span class="keyword">on</span> a.id=b.id;</span><br><span class="line"><span class="comment">--结果</span></span><br><span class="line">1chenli21</span><br><span class="line">2xuzeng22</span><br><span class="line">3xiaodan23</span><br><span class="line"><span class="comment">--下列语句会报错</span></span><br><span class="line"><span class="keyword">select</span> a.*,b.* <span class="keyword">from</span> stu a <span class="keyword">left</span> <span class="keyword">semi</span> <span class="keyword">join</span> sub b <span class="keyword">on</span> a.id=b.id;</span><br></pre></td></tr></table></figure><h2 id="笛卡尔连接"><a href="#笛卡尔连接" class="headerlink" title="笛卡尔连接"></a>笛卡尔连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.*,b.* <span class="keyword">from</span> cl_student a <span class="keyword">join</span> cl_stu_sub b;</span><br><span class="line"><span class="comment">--结果</span></span><br><span class="line">1chenli211chinese</span><br><span class="line">1chenli212english</span><br><span class="line">1chenli213science</span><br><span class="line">1chenli215nature</span><br><span class="line">2xuzeng221chinese</span><br><span class="line">2xuzeng222english</span><br><span class="line">2xuzeng223science</span><br><span class="line">2xuzeng225nature</span><br><span class="line">3xiaodan231chinese</span><br><span class="line">3xiaodan232english</span><br><span class="line">3xiaodan233science</span><br><span class="line">3xiaodan235nature</span><br><span class="line">4hua241chinese</span><br><span class="line">4hua242english</span><br><span class="line">4hua243science</span><br><span class="line">4hua245nature</span><br></pre></td></tr></table></figure><p>花了几天的时间整理了hive的用法，终于不用在对着SQL摸瞎了，加油吧进击的SQL boy！ 日常福利(●´∀｀●)</p><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/alisi.jpg" alt="爱丽丝"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;表的增删改查操作&quot;&gt;&lt;a href=&quot;#表的增删改查操作&quot; class=&quot;headerlink&quot; title=&quot;表的增删改查操作&quot;&gt;&lt;/a&gt;表的增删改查操作&lt;/h1&gt;&lt;h2 id=&quot;创建表&quot;&gt;&lt;a href=&quot;#创建表&quot; class=&quot;headerlink&quot; title=&quot;创建表&quot;&gt;&lt;/a&gt;创建表&lt;/h2&gt;&lt;p&gt;使用if not exists 如果存在则跳过，comment为注释。&lt;/p&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exists&lt;/span&gt; mydb.employees(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Employee name&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	salary &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Employee salary&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subordinates &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Names of subordinates&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	deduction &lt;span class=&quot;keyword&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	address &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;lt;street:&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, city:&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, state:&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, zip:&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Home address&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;descriptions of table&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location &lt;span class=&quot;string&quot;&gt;&#39;/user/hive/warehouse/mydb.db/employees&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hive编程" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/hive%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Hive" scheme="http://yoursite.com/tags/Hive/"/>
    
      <category term="基本操作" scheme="http://yoursite.com/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>hive数据类型</title>
    <link href="http://yoursite.com/2019/09/08/hive%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2019/09/08/hive数据类型/</id>
    <published>2019-09-08T08:40:03.000Z</published>
    <updated>2019-09-08T16:04:42.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文本文件数据编码"><a href="#文本文件数据编码" class="headerlink" title="文本文件数据编码"></a>文本文件数据编码</h2><ul><li>TSV：tab separated values；即“制表符分隔值”，用制表符分隔数据</li><li>CSV： comma separated values；即“逗号分隔值”，用逗号分隔数据</li></ul><p>两种文件存在的缺点在于文件中可能存在不需要作为分隔符的逗号或者制表符存在，所有hive有专门的分隔符。</p><p>hive记录中默认的分隔符</p><a id="more"></a><div class="table-container"><table><thead><tr><th style="text-align:center">分隔符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">\n</td><td style="text-align:center">对于文本文件来说每一行都是记录，可以使用换行符作为分隔符</td></tr><tr><td style="text-align:center">^A(ctrl+A)</td><td style="text-align:center">用于分隔字段(列)，在CREATE TABLE 语句中可以使用八进制编码\001表示，键盘上打不出来。</td></tr><tr><td style="text-align:center">^B</td><td style="text-align:center">用于分隔array或者struct中的元素，或于用map钟键值对的分隔，在CREATE TABLE中使用\002表示</td></tr><tr><td style="text-align:center">^C</td><td style="text-align:center">用于MAP钟键与值的分隔，用\003表示</td></tr></tbody></table></div><h2 id="读时模式"><a href="#读时模式" class="headerlink" title="读时模式"></a>读时模式</h2><p>传统数据库是<strong>写时模式</strong>，即在写入文件的时候会，会对数据的格式进行校验，如果不符合，将无法写入数据库。</p><p>hive是<strong>读时模式</strong>，在往数据库里写入不会对数据进行校验，但是在读取数据的时候会对数据进行校验，对于不合格的数据，会设置为null。</p><p>hive的优点在于加载(写)数据的时候速度较快，因为不需要对数据进行解析，而传统写时模式则有利于数据的查询。</p><p>好久没有更新博客了，这篇虽然水了点，写得像个笔记，算是开篇吧，福利就上亚丝娜吧!!!</p><p><img src="https://raw.githubusercontent.com/geroge-gao/Images/master/test1.jpg" alt="亚丝娜"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文本文件数据编码&quot;&gt;&lt;a href=&quot;#文本文件数据编码&quot; class=&quot;headerlink&quot; title=&quot;文本文件数据编码&quot;&gt;&lt;/a&gt;文本文件数据编码&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;TSV：tab separated values；即“制表符分隔值”，用制表符分隔数据&lt;/li&gt;
&lt;li&gt;CSV： comma separated values；即“逗号分隔值”，用逗号分隔数据&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;两种文件存在的缺点在于文件中可能存在不需要作为分隔符的逗号或者制表符存在，所有hive有专门的分隔符。&lt;/p&gt;&lt;p&gt;hive记录中默认的分隔符&lt;/p&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hive编程" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/hive%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Hive" scheme="http://yoursite.com/tags/Hive/"/>
    
      <category term="编码类型" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A0%81%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
</feed>
